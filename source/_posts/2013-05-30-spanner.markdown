---
layout: post
title: "spanner"
date: 2013-05-30 18:05
comments: true
categories: 
published: true
---

##What is Spanner?

Spanner is a highly distributed, externally consistent database
developed by Google.  It provides replication and transactions over a
geographically distributed set of servers.  Spanner uses time bounds,
Paxos, and two-phase commit.

Spanner is unique due to its external consistency, which is the strongest
consistent model one can get. External consistency guarantees that events
happen at real time order, a stronger model than the "strong/sequential
consistency" model. Here is an sequence of events that is possible in
sequential consistency but not external consistency.

<pre>
            t0             t1           t2           t3
client0:  write(x, 1),               read(y) = 0,
client1:               write(y, 1),                read(x) = 1
</pre>

In Spanner, read(y) must return 1 because it is executed after write(y,1).

##Interesting ideas

Spanner uses clocks with bounded uncertainty to provide synchrony between
servers. It also shards an application's data into little bits to provide
fine-grained load distribution. Transactions are also provided to applications
in order to deal with independently managed shards.

##Subtleties

TrueTime guarantees one thing: that the "absolute" time is within the interval.
Since Spanner commits only when <code>TT.now.after(timestamp)</code> is true, we are
guaranteed that from now on <code>TT.now.latest()</code> will always be larger than the
commited timestamp on all servers.

##Questions

* **Why is the write throughput so low?**  4K ops/sec for one server not running Paxos and not waiting for any
  other commit times seems very low.

* **Why is the throughput experiment CPU bound?**

* **What happens if we use logical time(which preserves causality) rather than the true time?** Maybe external
consistency breaks, but the system is still sequentially consistent.

[6.824 notes](http://pdos.csail.mit.edu/6.824/notes/l07.txt)
